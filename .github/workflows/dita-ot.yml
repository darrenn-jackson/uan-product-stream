# GHA: This is the dita-ot workflow

---
name: DITA OT  ## The name of the workflow that appears under workflows in the UI.

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ reference ] ## Currently this branch does NOT exist, as intended.  These jobs should never run except for testing purposes, etc.
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  dita-ot:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Configure the required plugins not available in public repository
      - name: Configure the HPE HTML5 Plugin
        run: |
          echo "Copy HTML5 zip file to current directory"
          cp docs/portal/developer-portal/com.hpe.html5.common-master.zip .

      # GHA: Need to install the HTML5 plugin below
      # as well as any other required plugins
      - name: Build HTML5 using DITA-OT Install
        uses: dita-ot/dita-ot-action@master
        with:
            install: |
              dita install com.hpe.html5.common-master.zip
            input: docs/portal/developer-portal/uan_install.ditamap
            transtype: html5
            output-path: docs/portal/developer-portal/build

      - name: Build HTML5 using DITA-OT Admin
        uses: dita-ot/dita-ot-action@master
        with:
            install: |
              dita install com.hpe.html5.common-master.zip
            input: docs/portal/developer-portal/uan_admin.ditamap
            transtype: html5
            output-path: docs/portal/developer-portal/build

      - name: Build PDF using DITA-OT Install
        uses: dita-ot/dita-ot-action@master
        with:
            install: |
              dita install com.hpe.html5.common-master.zip
            input: docs/portal/developer-portal/uan_install.ditamap
            transtype: pdf

      - name: Build pdf using DITA-OT Admin
        uses: dita-ot/dita-ot-action@master
        with:
            install: |
              dita install com.hpe.html5.common-master.zip
            input: docs/portal/developer-portal/uan_admin.ditamap
            transtype: pdf
            output-path: docs/portal/developer-portal/build

      # Add some required packages
      - name: Add some required packages
        run: |
          sudo apt update
          sudo apt -y install libxml2-utils
          # xmllint --help

      # return value of pubsnumber
      - name: return value of pubsnumber
        run: |
          xmllint --xpath 'string(/map/topicmeta/data/@value)' docs/portal/developer-portal/uan_admin.ditamap

      # Remove unnecessary zip files
      # GHA Eventually we can make these values dynamic
      - name: Remove unnecessary zip files
        run: |
          rm docs/portal/developer-portal/build/admin/*.zip
          rm docs/portal/developer-portal/build/install/*.zip

      - name: Upload DITA
        uses: actions/upload-artifact@v2
        with:
            name: dita-artifact
            path: docs/portal/developer-portal/build # The folder the action should upload.

      # - uses: actions/setup-java@v3
      #   with:
      #     distribution: 'zulu' # See 'Supported distributions' for available options
      #     java-version: '11'

      # # Runs a single command using the runners shell
      # - name: check docker version
      #   run: |
      #     docker --version

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          lsb_release -a
          apt list --installed